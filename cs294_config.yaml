# An unique identifier for the head node and workers of this cluster.
cluster_name: cs294-testing

# The minimum number of workers nodes to launch in addition to the head
# node. This number should be >= 0.
min_workers: 4

# The maximum number of workers nodes to launch in addition to the head
# node. This takes precedence over min_workers.
max_workers: 4

# The autoscaler will scale up the cluster to this target fraction of resource
# usage. For example, if a cluster of 10 nodes is 100% busy and
# target_utilization is 0.8, it would resize the cluster to 13. This fraction
# can be decreased to increase the aggressiveness of upscaling.
# This value must be less than 1.0 for scaling to happen.
target_utilization_fraction: 0.8

# If a node is idle for this many minutes, it will be removed.
idle_timeout_minutes: 5

# Cloud-provider specific configuration.
provider:
    type: aws
    region: us-west-2
    availability_zone: us-west-2a

# How Ray will authenticate with newly launched nodes.
auth:
    ssh_user: ubuntu
# By default Ray creates a new private keypair, but you can also use your own.
# If you do so, make sure to also set "KeyName" in the head and worker node
# configurations below.
#    ssh_private_key: /path/to/your/key.pem

# Provider-specific config for the head node, e.g. instance type. By default
# Ray will auto-configure unspecified fields such as SubnetId and KeyName.
# For more documentation on available fields, see:
# http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.ServiceResource.create_instances
head_node:
    InstanceType: m5.xlarge
    ImageId: ami-0def3275  # Default Ubuntu 16.04 AMI.

    # Set primary volume to 25 GiB
    BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
              VolumeSize: 50

    # Additional options in the boto docs.

# Provider-specific config for worker nodes, e.g. instance type. By default
# Ray will auto-configure unspecified fields such as SubnetId and KeyName.
# For more documentation on available fields, see:
# http://boto3.readthedocs.io/en/latest/reference/services/ec2.html#EC2.ServiceResource.create_instances
worker_nodes:
    InstanceType: m5.xlarge
    ImageId: ami-0def3275  # Default Ubuntu 16.04 AMI.

    # Set primary volume to 25 GiB
    BlockDeviceMappings:
        - DeviceName: /dev/sda1
          Ebs:
              VolumeSize: 50

    # Run workers on spot by default. Comment this out to use on-demand.
    InstanceMarketOptions:
        MarketType: spot
        # Additional options can be found in the boto docs, e.g.
        #   SpotOptions:
        #       MaxPrice: MAX_HOURLY_PRICE

    # Additional options in the boto docs.

# Files or directories to copy to the head and worker nodes. The format is a
# dictionary from REMOTE_PATH: LOCAL_PATH, e.g.
file_mounts: {
    "/home/ubuntu/dotfiles": "/home/stephanie/dotfiles",
    "/home/ubuntu/ray-graph": "/home/stephanie/ray-graph",
#    "/path2/on/remote/machine": "/path2/on/local/machine",
}

# List of shell commands to run to set up nodes.
setup_commands:
    # Consider uncommenting these if you run into dpkg locking issues
    # - sudo pkill -9 apt-get || true
    # - sudo pkill -9 dpkg || true
    # - sudo dpkg --configure -a
    - ssh-keygen -F github.com || echo "github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDSwBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJNlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RPW3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+wC604ydGXA8VJiS5ap43JXiUFFAaQ==" >> ~/.ssh/known_hosts
    # Install basics.
    - sudo apt-get update
    - sudo apt-get install -y cmake pkg-config build-essential autoconf curl libtool unzip flex bison python libsm6 libxext6 libxrender-dev
    # Install Anaconda.
    - if [ ! -f ~/Anaconda3-5.0.1-Linux-x86_64.sh ]; then
      wget https://repo.continuum.io/archive/Anaconda3-5.0.1-Linux-x86_64.sh || true;
      bash Anaconda3-5.0.1-Linux-x86_64.sh -b -p $HOME/anaconda3 || true;
      echo 'export PATH="$HOME/anaconda3/bin:$PATH"' >> ~/.bashrc;
      fi
    # # Build Ray.
    - pip install boto3==1.4.8 cython==0.27.3 setproctitle
    - git clone https://github.com/ray-project/ray ~/ray || true
    - cd ~/ray && git remote add swang https://github.com/stephanie-wang/ray.git || true
    - cd ~/ray && git fetch swang; git checkout swang/cs294-scheduling
    - if [ ! -d ~/ray/build ]; then
      cd ~/ray/python; git pull; pip install -e . --verbose; else
      (cd ~/ray/build; make) || (cd ~/ray/python; python setup.py develop);
      fi
    - pip install -U dask
      #- pip install https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-0.5.3-cp36-cp36m-manylinux1_x86_64.whl
    - pip install ray[rllib]
    - pip install opencv-python
    - pip install -U tensorflow
    - echo /home/ubuntu/core.%p | sudo tee /proc/sys/kernel/core_pattern 

# Custom commands that will be run on the head node after common setup.
head_setup_commands: []

# Custom commands that will be run on worker nodes after common setup.
worker_setup_commands: []

# Command to start ray on the head node. You don't need to change this.
head_start_ray_commands:
    - ray stop
    - rm -rf /tmp/ray/*
    - ulimit -c unlimited; ulimit -n 65536; ray start --head --num-redis-shards=10 --redis-port=6379 --autoscaling-config=~/ray_bootstrap_config.yaml

# Command to start ray on worker nodes. You don't need to change this.
worker_start_ray_commands:
    - ray stop
    - rm -rf /tmp/ray/*
    - ulimit -c unlimited; ulimit -n 65536; ray start --redis-address=$RAY_HEAD_IP:6379
